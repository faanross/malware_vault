import sys

SECRET_KEY = "wereonaroadtonowherecomeoninside"

def scramble_data(payload, encryption_key):
    encryption_key = encryption_key.encode()
    key_size = len(encryption_key)
    scrambled_payload = bytearray()

    for index, value in enumerate(payload):
        key_value = encryption_key[index % key_size]
        scrambled_value = value ^ key_value
        scrambled_payload.append(scrambled_value)

    return scrambled_payload

def display_encrypted_data(encrypted_payload):
    hex_values = ['0x{:02x}'.format(value) for value in encrypted_payload]
    print('{ ' + ', '.join(hex_values) + ' };')

def process_payload():
    if len(sys.argv) != 2:
        print("Usage: %s <raw payload file>" % sys.argv[0])
        sys.exit(1)

    try:
        with open(sys.argv[1], "rb") as payload_file:
            raw_payload = payload_file.read()
    except IOError:
        print("Error: Could not read the file.")
        sys.exit(1)

    encrypted_data = scramble_data(raw_payload, SECRET_KEY)
    display_encrypted_data(encrypted_data)

if __name__ == '__main__':
    process_payload()